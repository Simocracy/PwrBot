#!/usr/bin/python
# -*- coding: UTF-8 -*-

import urllib, urllib2, cookielib
import xml.etree.ElementTree as ET
import re
import time
import simocracy.wiki as wiki

from django.core.management.base import BaseCommand, CommandError
from mssim.models import Staat, Buendnis

class Command(BaseCommand):
    args = 'None'
    help = 'Aktualisiert die Staatendatenbank'
    
    neutralflagge = "http://simocracy.de/images/1/1c/Xxwhiteflag.png"
    platzhalter = "http://simocracy.de/images/6/65/Platzhalter.png"
            
        
        
        
    """
    Fuehrt das Kommando aus.
    """
    def handle(self, *args, **options):
	opener = wiki.login(wiki.username, wiki.password)
        response = opener.open(wiki.url + wiki.vz + "?action=raw")
        vz = wiki.readVZ(response, opener)
        
        staaten = vz["staaten"]
        bnds = vz["buendnisse"]
        
        """
        DB-Modelle aufbauen
        """
        
        #Alte Daten löschen
        Staat.objects.all().delete()
        Buendnis.objects.all().delete()
        
        #"Kein Bündnis"-Bündnis
        neutralbnd = Buendnis()
        neutralbnd.name = "Kein Bündnis"
        neutralbnd.flagge = self.platzhalter
        neutralbnd.save()
        
        for buendnis in bnds:
            bnd = Buendnis()
            bnd.flagge = buendnis["flagge"]
            bnd.name = buendnis["name"]
            bnd.save()
            
        # Staaten sortieren
        staaten = sorted(staaten, key=lambda k: k['name']) 
            
        for state in staaten:
            staat = Staat()
            staat.name = state["name"]
            staat.flagge = state["flagge"]
            staat.spieler = state["spieler"]
            staat.ms = state["ms"]
            staat.bomben = state["as"]
            
            #Bündnis suchen
            found = False
            for bnd in Buendnis.objects.all():
                if bnd.flagge == state["buendnis"]:
                    staat.buendnis = bnd
                    found = True
            
            if not found:
                if state["buendnis"] != self.neutralflagge:
                    self.stdout.write("Konnte "+state["buendnis"]+" keinem bestehenden Bündnis zuordnen. "
                                    +state["name"]+" wird daher als neutral eingetragen.")
                staat.buendnis = neutralbnd
            
            staat.save()
        
        # Timestamp schreiben
        f = open("/home/fluggs/sysite/mssim/lastupdate", "w")
        f.write(str(int(time.time())))
        f.close()
